openapi: 3.0.0
info:
  title: qin-todo
  version: '0.1'
servers:
  - url: 'http://localhost:18080'
paths:
  /user:
    get:
      summary: ユーザー情報取得
      operationId: get-user
      responses:
        '200':
          description: ユーザー情報取得成功
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    avatar_url: null
                    email: test@example.com
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    name: 名前
                properties:
                  avatar_url:
                    type: string
                    nullable: true
                  email:
                    type: string
                    minLength: 1
                  id:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
              examples:
                太郎さんの情報:
                  value:
                    avatar_url: 'https://lh3.googleusercontent.com/a-/AOh14Gg7m3sGmgDctni57nyWg6ATJLrSJNeT4mKIPtb_lxo=s96-c'
                    email: test1@example.com
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    name: 太郎
                二郎さんの情報:
                  value:
                    avatar_url: null
                    email: test2@example.com
                    id: 01FZ4NY6195YHN33X736978NTV
                    name: 二郎
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: session invailed
              examples:
                example-1:
                  value:
                    error: string
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      tags:
        - user
  /auth/login:
    post:
      summary: login
      operationId: post-auth-login
      responses:
        '200':
          description: ログイン成功(CookieにセッションIDが付与される)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  reqb:
                    type: object
                    properties:
                      email:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                    required:
                      - email
                      - password
                  sessionId:
                    type: string
                    minLength: 1
                required:
                  - id
                  - reqb
                  - sessionId
                x-examples:
                  example-1:
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    reqb:
                      email: test@example.com
                      password: test123
                    sessionId: c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a
              examples:
                example-1:
                  value:
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    reqb:
                      email: test@example.com
                      password: test123
                    sessionId: c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a
          headers:
            Set-Cookie:
              schema:
                type: string
              description: session=c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a; Path=/; Domain=localhost; Max-Age=3600; HttpOnly
        '400':
          description: メールアドレスまたはパスワードが違うときのエラー
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: Wrong email address or password
              examples:
                example-1:
                  value:
                    error: Wrong email address or password
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
            examples:
              太郎さんでログイン:
                value:
                  email: test1@example.com
                  password: test123
              二郎さんでログイン:
                value:
                  email: test2@example.com
                  password: test456
              alexさんでログイン:
                value:
                  email: test3@example.com
                  password: test789
          application/xml:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
            examples:
              example-1:
                value: |-
                  {
                      "email": "test@example.com",
                      "password": "test123"
                  }
        description: メールアドレスとパスワードをリクエストボディに含める
      tags:
        - auth
  /auth/logout:
    post:
      summary: logout
      tags:
        - auth
      responses:
        '200':
          description: ログアウト完了(cookieに保存されていたセッションIDを削除)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: Logged out.
              examples:
                example-1:
                  value:
                    message: Logged out.
        '401':
          description: ログアウトしようとしたが、既にログアウトしていた場合、もしくはセッションIDが(有効期限切れなどで)無効になっていた場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: Already logged out. Or your session ID is invalid.
              examples:
                example-1:
                  value:
                    error: Already logged out. Or your session ID is invalid.
      operationId: post-auth-logout
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      description: ログアウト機能
  /auth/register:
    post:
      summary: ユーザー登録
      tags:
        - auth
      responses:
        '200':
          description: 登録完了（response bodyにハッシュ化したパスワードなど色々含めているが、確認用なため本番ではresponse bodyは使用しないつもりです）
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  hashed:
                    type: string
                    minLength: 1
                  id:
                    type: string
                    minLength: 1
                  reqb:
                    type: object
                    properties:
                      email:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                    required:
                      - email
                      - password
                required:
                  - hashed
                  - id
                  - reqb
                x-examples:
                  example-1:
                    hashed: $2a$10$koIpvmPPtDt/0s24c8660.mnNN7.ng/YI5/DrzTM7is6Is4EQvGOS
                    id: 01FZ4M93QS931QJT8SZCYADKCA
                    reqb:
                      email: test2@example.com
                      password: test123
              examples:
                example-1:
                  value:
                    hashed: $2a$10$koIpvmPPtDt/0s24c8660.mnNN7.ng/YI5/DrzTM7is6Is4EQvGOS
                    id: 01FZ4M93QS931QJT8SZCYADKCA
                    reqb:
                      email: test2@example.com
                      password: test123
        '400':
          description: 既に使われているメールアドレスで登録しようとしたときのエラー
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: 'Error 1062: Duplicate entry ''test2@example.com'' for key ''email'''
              examples:
                example-1:
                  value:
                    error: 'Error 1062: Duplicate entry ''test2@example.com'' for key ''email'''
      operationId: post-auth-register
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
            examples:
              example-1:
                value:
                  email: test@example.com
                  password: test123
        description: ''
