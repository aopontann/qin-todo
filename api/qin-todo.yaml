openapi: "3.0.0"
info:
  version: 0.0.1
  title: qin-todo
  description: demo
servers:
  # - url: https://example.com/api/v0
  #   description: プロダクション API
  - url: http://{host}:{port}/api/v0
    description: 開発用
    variables:
      host:
        default: localhost
      port:
        default: '10080'
paths:
  /todos:
    get:
      summary: 全てのTodoを取得する
      responses:
        '200':
          description: Todoの配列を返す
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todos'
      tags:
        - todos

    post:
      summary: Todoを作成する
      operationId: addPet
      requestBody:
        description: Todoを作成する
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
      responses:
        '201':
          description: Todoの作成に成功しました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todos'
        default:
          description: エラーが発生しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - todos

  /todos/{todo_id}:
    put:
      summary: Todoを更新する
      parameters:
        - name: todo_id
          in: path
          description: Todoのid
          required: true
          schema:
            type: string
      requestBody:
        description: Todoを更新する
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
      responses:
        '200':
          description: Todoを更新しました
      tags:
        - todos

    delete:
      summary: Todoを削除する
      parameters:
        - name: todo_id
          in: path
          description: Todoのid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Todoを削除しました
      tags:
        - todos

  /users/{user_id}:
    get:
      summary: ユーザー情報を取得する
      parameters:
        - name: user_id
          in: path
          description: ユーザーid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ユーザー情報
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
      tags:
      - users

    put:
      summary: ユーザー情報を更新する（アイコンURLと名前）
      parameters:
        - name: user_id
          in: path
          description: ユーザーid
          required: true
          schema:
            type: string
      requestBody:
        description: ユーザー情報を更新しました
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: ユーザー情報
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
      tags:
      - users

tags:
- name: users
  description: ユーザーに関するAPI群です
- name: todos
  description: Todoに関するAPI群です

components:
  schemas:
    NewTodo:
      required:
        - content
        - execution_date
      properties:
        content:
          type: string
          description: Todoの内容
        execution_date:
          type: string
          example: 'today'
          format: date-time
          description: Todoをやる予定の日付

    Todos:
      description: Todo
      properties:
        todo_id:
          type: string
          description: todoのid
        content:
          type: string
          description: Todoの内容
          example: 洗濯物を干す
          maxLength: 255
        completed:
          type: boolean
          description: Todoが完了しているかどうか（trueなら完了している）
          example: false
        execution_date:
          type: string
          example: today
          enum:
            - today
            - tomorrow
            - later
          description: Todoをやる予定の日付
        created_at:
          type: string
          example: '2020-01-30T23:59:59+09:00'
          format: date-time
          description: Todoが作成された日付

    User:
      description: ユーザー
      properties:
        user_id:
          type: string
          description: ユーザーid
        name:
          type: string
          description: ユーザー名
          maxLength: 255
          example: RINKA
        email:
          type: string
          format: email
          description: メールアドレス
          maxLength: 255
          example: test@example.com
        iconURL:
          type: string
          description: アイコンのURL
          maxLength: 255

    UpdateUser:
      required:
        - name
        - iconURL
      properties:
        name:
          type: string
          description: ユーザー名
          maxLength: 255
          example: RINKA
        iconURL:
          type: string
          description: アイコンのURL
          maxLength: 255

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
