openapi: 3.0.0
info:
  title: qin-todo
  version: '0.1'
  description: qin-todoのAPI
servers:
  - url: 'http://localhost:18080'
paths:
  /users:
    get:
      summary: ユーザー情報取得
      operationId: get-user
      responses:
        '200':
          description: ユーザー情報取得成功
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    avatar_url: null
                    email: test@example.com
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    name: 名前
                properties:
                  avatar_url:
                    type: string
                    nullable: true
                  email:
                    type: string
                    minLength: 1
                  id:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
              examples:
                太郎さんの情報:
                  value:
                    avatar_url: 'https://lh3.googleusercontent.com/a-/AOh14Gg7m3sGmgDctni57nyWg6ATJLrSJNeT4mKIPtb_lxo=s96-c'
                    email: test1@example.com
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    name: 太郎
                二郎さんの情報:
                  value:
                    avatar_url: null
                    email: test2@example.com
                    id: 01FZ4NY6195YHN33X736978NTV
                    name: 二郎
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: session invailed
              examples:
                example-1:
                  value:
                    error: string
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      tags:
        - user
      description: セッションIDを使ってユーザー情報を取得する
    parameters: []
  /auth/login:
    post:
      summary: ログイン
      operationId: post-auth-login
      responses:
        '200':
          description: ログイン成功(CookieにセッションIDが付与される)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  reqb:
                    type: object
                    properties:
                      email:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                    required:
                      - email
                      - password
                  sessionId:
                    type: string
                    minLength: 1
                required:
                  - id
                  - reqb
                  - sessionId
                x-examples:
                  example-1:
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    reqb:
                      email: test@example.com
                      password: test123
                    sessionId: c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a
              examples:
                example-1:
                  value:
                    id: 01FYXJAV5S9QARVY8AV66A5FAB
                    reqb:
                      email: test@example.com
                      password: test123
                    sessionId: c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a
          headers:
            Set-Cookie:
              schema:
                type: string
              description: session=c91ebd34-b6ac-408d-a66d-fe1e99fa1f0a; Path=/; Domain=localhost; Max-Age=3600; HttpOnly
        '400':
          description: メールアドレスまたはパスワードが違うときのエラー
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: Wrong email address or password
              examples:
                example-1:
                  value:
                    error: Wrong email address or password
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
            examples:
              太郎さんでログイン:
                value:
                  email: test1@example.com
                  password: test123
              二郎さんでログイン:
                value:
                  email: test2@example.com
                  password: test456
              alexさんでログイン:
                value:
                  email: test3@example.com
                  password: test789
          application/xml:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
            examples:
              example-1:
                value: |-
                  {
                      "email": "test@example.com",
                      "password": "test123"
                  }
        description: メールアドレスとパスワードをリクエストボディに含める
      tags:
        - auth
      description: メールアドレスとパスワードでユーザー認証を行う
  /auth/logout:
    post:
      summary: ログアウト
      tags:
        - auth
      responses:
        '200':
          description: ログアウト完了(cookieに保存されていたセッションIDを削除)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: Logged out.
              examples:
                example-1:
                  value:
                    message: Logged out.
        '401':
          description: ログアウトしようとしたが、既にログアウトしていた場合、もしくはセッションIDが(有効期限切れなどで)無効になっていた場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: Already logged out. Or your session ID is invalid.
              examples:
                example-1:
                  value:
                    error: Already logged out. Or your session ID is invalid.
      operationId: post-auth-logout
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      description: セッションIDを無効化してログアウトする
  /auth/register:
    post:
      summary: ユーザー登録
      tags:
        - auth
      responses:
        '200':
          description: 登録完了（response bodyにハッシュ化したパスワードなど色々含めているが、確認用なため本番ではresponse bodyは使用しないつもりです）
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  hashed:
                    type: string
                    minLength: 1
                  id:
                    type: string
                    minLength: 1
                  reqb:
                    type: object
                    properties:
                      email:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                    required:
                      - email
                      - password
                required:
                  - hashed
                  - id
                  - reqb
                x-examples:
                  example-1:
                    hashed: $2a$10$koIpvmPPtDt/0s24c8660.mnNN7.ng/YI5/DrzTM7is6Is4EQvGOS
                    id: 01FZ4M93QS931QJT8SZCYADKCA
                    reqb:
                      email: test2@example.com
                      password: test123
              examples:
                example-1:
                  value:
                    hashed: $2a$10$koIpvmPPtDt/0s24c8660.mnNN7.ng/YI5/DrzTM7is6Is4EQvGOS
                    id: 01FZ4M93QS931QJT8SZCYADKCA
                    reqb:
                      email: test2@example.com
                      password: test123
        '400':
          description: 既に使われているメールアドレスで登録しようとしたときのエラー
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: 'Error 1062: Duplicate entry ''test2@example.com'' for key ''email'''
              examples:
                example-1:
                  value:
                    error: 'Error 1062: Duplicate entry ''test2@example.com'' for key ''email'''
      operationId: post-auth-register
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
              x-examples:
                example-1:
                  email: test@example.com
                  password: test123
            examples:
              example-1:
                value:
                  email: test@example.com
                  password: test123
        description: ''
      description: メールアドレスとパスワードでユーザー登録をする
  /todos:
    get:
      summary: ToDo取得
      tags:
        - todos
      responses:
        '200':
          description: ToDo取得成功
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    items:
                      - id: id001
                        content: 洗濯物を干す
                        completed: true
                        execution_date: '2022-04-01 00:00:00'
                properties:
                  items:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        content:
                          type: string
                          minLength: 1
                        completed:
                          type: boolean
                        execution_date:
                          $ref: '#/components/schemas/execution_date'
                      required:
                        - id
                        - content
                        - completed
                        - execution_date
                required:
                  - items
              examples:
                example-1:
                  value:
                    items:
                      - id: '1'
                        content: デモ1
                        completed: false
                        execution_date:
                          String: '2019-10-04 00:00:00'
                          Valid: true
                      - id: '2'
                        content: デモ2
                        completed: true
                        execution_date:
                          String: '2019-10-05 00:00:00'
                          Valid: true
                      - id: '4'
                        content: デモ4
                        completed: true
                        execution_date: null
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
              examples:
                example-1:
                  value:
                    error: string
      operationId: get-todos
      description: 一意のユーザーのToDoリスト全てを取得する
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッション ID
          required: true
    post:
      summary: ToDo作成
      operationId: post-todos
      responses:
        '201':
          description: ToDo作成成功
        '400':
          description: リクエストボディに不正なデータを指定した場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
      description: |-
        ToDoを作成する
        execution_dateにはUTCで"2020-12-25 00:00:00"形式を指定してください
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  id: id001
                  content: 洗濯物を干す
                  completed: true
                  execution_date: '2019-10-06 00:00:00'
              properties:
                content:
                  type: string
                  minLength: 1
                execution_date:
                  type: string
                  minLength: 1
              required:
                - content
            examples:
              example-1:
                value:
                  content: string
                  execution_date: string
        description: ''
      tags:
        - todos
    parameters: []
  '/todos/{todo_id}':
    parameters:
      - schema:
          type: string
        name: todo_id
        in: path
        required: true
    put:
      summary: ToDo更新
      tags:
        - todos
      responses:
        '200':
          description: 更新成功
        '400':
          description: 'リクエストボディやtodo_idに不正なデータを指定した場合 '
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
        '403':
          description: 他のユーザーが作成したToDoを更新しようとした場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
      operationId: put-todos-todo_id
      description: 指定されたtodo_idに紐づくToDoデータを更新する
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          description: セッションID
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  id: id001
                  content: 洗濯物を干す
                  completed: true
                  execution_date: '2019-10-06 00:00:00'
              properties:
                content:
                  type: string
                  minLength: 1
                completed:
                  type: boolean
                execution_date:
                  type: string
                  minLength: 1
                  nullable: true
            examples:
              example-1:
                value:
                  content: string
                  completed: true
                  execution_date: string
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
          application/javascript:
            schema:
              type: object
              properties: {}
          application/EDIFACT:
            schema:
              type: object
              properties: {}
          application/atom+xml:
            schema:
              type: object
              properties: {}
          application/font-woff:
            schema:
              type: object
              properties: {}
          application/gzip:
            schema:
              type: object
              properties: {}
          application/octet-stream:
            schema:
              type: object
              properties: {}
          application/ogg:
            schema:
              type: object
              properties: {}
        description: ''
    delete:
      summary: ToDo削除
      operationId: delete-todos-todo_id
      responses:
        '200':
          description: 　削除成功
        '401':
          description: セッションIDが無効である場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
        '403':
          description: 他のユーザーが作成したToDoを削除しようとした場合
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
                x-examples:
                  example-1:
                    error: string
      parameters:
        - schema:
            type: string
          in: cookie
          name: session
          required: true
          description: セッションID
      tags:
        - todos
      description: 指定されたtodo_idに紐づくToDoデータを削除する
components:
  schemas:
    execution_date:
      description: ''
      type: object
      x-examples:
        example-1:
          String: '2019-10-04 00:00:00'
          Valid: true
      nullable: true
      properties:
        String:
          type: string
          minLength: 1
        Valid:
          type: boolean
      required:
        - String
        - Valid
  securitySchemes: {}
