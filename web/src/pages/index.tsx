import type { NextPage } from 'next';
import Head from 'next/head';
import { Header } from 'component/Header';
import { Footer } from 'component/Footer';
import { Body } from 'component/Body';
import { useEffect, useRef, useState } from 'react';
import { addDays } from 'date-fns';
import { formatInTimeZone } from 'date-fns-tz';
import { useTodoContext } from 'context/TodoContext';
import { TodosList } from 'component/TodosList';
import { TodoInput } from 'component/TodoInput';
import { useSession, signIn, signOut } from 'next-auth/react';

type Items = {
  id: string;
  content: string;
  completed: boolean;
  execution_date: string | null;
}[];

// apiレスポンス 削除予定
const res: { items: Items } = {
  items: [
    {
      id: 'id001',
      content: '買い物する',
      completed: false,
      execution_date: '2019-10-06 00:00:00',
    },
    {
      id: 'id002',
      content: '洗濯物を干す',
      completed: true,
      execution_date: null,
    },
    {
      id: 'id003',
      content: '※常に明日になるタスク',
      completed: true,
      execution_date: formatInTimeZone(addDays(new Date(), 1), 'UTC', 'yyyy-MM-dd HH:mm:ss'),
      // テスト用 常に明日の日付になる
    },
  ],
};

const Home: NextPage = () => {
  const { data, setData, handleTodosList } = useTodoContext();
  const [footerHeight, setFooterHeight] = useState(0);
  const footerRef = useRef<HTMLElement>(null);

  // APIを叩く処理の予定
  useEffect(() => setData(res.items), []);

  // タスクが増減するたびにフロント用の配列を作成
  useEffect(() => handleTodosList(), [data]);

  // footerの高さを取得してタスクが多くなった場合に最下部のタスクがinputに埋もれないように
  useEffect(() => {
    const resizeObserver = new ResizeObserver(() => {
      if (footerRef.current?.clientHeight != undefined) {
        setFooterHeight(footerRef?.current?.clientHeight);
      }
    });

    footerRef.current && resizeObserver.observe(footerRef.current);

    return () => {
      resizeObserver.disconnect();
    };
  }, [footerHeight]);

  const hoge = {
    email: 'test1@example.com',
    password: 'test123',
  };

  const param = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json; charset=utf-8',
    },
    body: JSON.stringify(hoge),
  };

  useEffect(() => {
    fetch('http://localhost:18080/auth/login', param)
      .then((res) => res.json())
      .then((res) => {
        console.log(res.sessionId);
        fetch('http://localhost:18080/todos?session="84fe2fed-a67e-4e6b-9df8-7d296ad1a353"').then((res) => {
          console.log(res);
        });
      });
  }, []);

  return (
    <div className='px-6' style={{ paddingBottom: `calc(2rem + ${footerHeight + 'px'})` }}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width,initial-scale=1.0,maximum-scale=1.0'></meta>
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Header></Header>

      <Body>
        <TodosList />
      </Body>

      <Footer _ref={footerRef}>
        <TodoInput />
      </Footer>
    </div>
  );
};

export default Home;
